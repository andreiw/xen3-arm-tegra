Xen3 ARMv7/Tegra2 work.
=======================

This is a an effort to bring up Samsung's Xen3 tree on
Tegra2. It's meant as a stepping stone to the Xen4 port.
Or maybe not. We'll see.

Status
======

Interrupts and timer working. A "boot volume" passed by the
bootloader (CPIO archive, *cough*, initrd) are expected to
contain /dom0 and /initrd0, which constitute dom0 kernel
and initrd, respectively.

Next up:
1) Slashing and burning existing dom0 loading code.
2) Attempting to load some dummy kernels and seeing the existing
   switching code work or not.

Building
========

$ make menuconfig
$ make

Running
=======

Assuming you have a Xoom with the serial port through the headphone h^Hjack.

$ sudo fastboot boot  /home/andreiw/src/xen3-arm-tegra/dist/install/boot/xen-bin-3.0.2-2 

This is the current output:
ATAG    (P): 0x00000100
Linked  (V): 0xff008000
Actual  (P): 0x00a00800
Desired (P): 0x00108000

Handing off to C...
[XEN]  __  __            _____  ___   ____    ____  
[XEN]  \ \/ /___ _ __   |___ / / _ \ |___ \  |___ \ 
[XEN]   \  // _ \ '_ \    |_ \| | | |  __) |__ __) |
[XEN]   /  \  __/ | | |  ___) | |_| | / __/|__/ __/ 
[XEN]  /_/\_\___|_| |_| |____(_)___(_)_____| |_____|
[XEN]                                               
[XEN] Xen/ARMv7 virtual machine monitor for ARM architecture
[XEN] Copyright (C) 2012 Andrei Warkentin <andreiw@msalumni.com>
[XEN] Copyright (C) 2007 Samsung Electronics Co, Ltd. All Rights Reserved.
[XEN]  http://www.cl.cam.ac.uk/netos/xen
[XEN]  University of Cambridge Computer Laboratory
[XEN] 
[XEN]  Xen version 3.0.2-2 (andreiw@(none)) (gcc version 4.4.3 (GCC) ) Mon Mar 19 20:47:46 EDT 2012
[XEN]  Platform: arm-tegra
[XEN]  GIT SHA: 7fc094c3050bc49ef2796001925be72a27728893
[XEN]  Kernel command line: <NULL>
[XEN]  Boot volume: 0x5000000-0x5000200
[XEN] TTB PA 0x104000
[XEN] idle_pgd VA 0xff004000
[XEN] xen_pstart 0x0
[XEN] xen_pend 0x40000000
[XEN] _end 0xff03fff8
[XEN] _end VA 0x13FFF8
[XEN] nr_pages needed for all page_infos = 0x500
[XEN] frame table is at 0xff040000-0xff540000
[XEN] xenheap_phys_start = 0x649000 (VA 0xff549000)
[XEN] xenheap_phys_end = 0x849000 (VA 0xff749000)
[XEN] looking at bank 0
[XEN]         base - 0x0
[XEN]         end  - 0x40000000
[XEN] calling init_boot_pages on 0x649000-0x40000000
[XEN] Using scheduler: Simple EDF Scheduler (sedf)
[XEN] Initializing ARM FCSE Unit
[XEN] Dom0 kernel 0x5000164-0x5000178
[XEN] Dom0 initrd 0x50000e8-0x50000f0
[XEN] *** LOADING DOMAIN : 0 ***
[XEN] DOM0 image is not a Xen-compatible Elf image.
[XEN] Could not prepare dom0
[XEN] 
[XEN] VMM Panic at xensetup.c:337

Changelog (more or less)
========================
Mar-19-2012: Boot volume stuff and xensetup.c cleanup.
Mar-14-2012: Timer and delay working.
Mar-06-2012: GIC/legacy IC stuff in (except for IRQ path),
             timer work - unfinished. Fix HIGH_VECTORS
             and NR_IRQs. Remove unmaintained crud.
Mar-05-2012: Wire GIC and legacy IC stuff.
Mar-02-2012: First work since summer, fixed mm bugs.
Jun-23-2011: Initial commit.

TODO
====

Here goes various stuff that consitutes braindead design
that came from Samsung's EmbeddedXen, and various odds and
ends and which need some lovin', but not immediately.
1) Instead of placing pgd 16K below load address, put it
   after the loaded image.
2) EmbeddedXen put the IVT at PHYS_OFFSET (another 16k
   below pgd, really). I fixed that nonsense by using
   a heap page, but that seems wasteful - just use
   an existing kernel page and map it again.
3) Think about frame table location. Currently after
   kernel image.
4) Fix the link address being 0x8000 - with pgd moved
   should have no reason for this nonsense.

Nice to have:
1) tegrafb for debugging
2) GDB stubs
3) FIQ debugger

Contact Info
============

Andrei Warkentin <andreiw@vmware.com>
Andrei Warkentin <andreiw@msalumni.com>
Andrei Warkentin <andrey.warkentin@gmail.com> 