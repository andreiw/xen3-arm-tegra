Xen3 ARMv7/Tegra2 work
======================

This is a an effort to bring up Samsung's Xen3 tree on
Tegra2. It's meant as a stepping stone to the Xen4 port.
Or maybe not. We'll see.

"Bring up" is a very relative word... most of the code
I end up having to (re)write isn't platform specific.
On the other hand, writing an OS is much more exciting
than making an existing one work on $FOO chip, so
I can't complain ;-).

Once the "basics" are in, the more interesting work
of figuring out the correct subset of hypercalls
and porting the Tegra2 Linux kernel to be PV can begin.
I am also musing adding self-hosting as a target - 
certainly it would be a boon for debugging and help
with SMP bring-up.


Differences
===========

Compatibility with Samsung's tree (or other Xen ARM efforts) is
not a goal. Compatibility at hypercall interface is a non-goal
as well. Perhaps I should rename my effort to "Nex" ;-).

Current differences from Samsung's tree:
1) ARMv7-only support.
2) Dom0/U configuration is not hardcoded.
3) Boot through ATAG-compatible bootloader, with all images passed
   through a "boot volume".
4) Kernel threads ("xen domains").
5) No ACM, given likely hypercall changes.
6) A FIQ-based extensible serial kernel debugger.

Full kernel preemption is a design goal. Kernel threads are cooperative at the moment.

Building
========

$ make menuconfig
$ make


Boot volume
===========

To get anywhere, you need to create a boot volume. This is a CPIO archive that at least
should contain a 'dom0' and 'initrd0' files.

Assuming the current directory contains the boot volume contents, the following
command will create a valid Xen boot volume.

$ find . | cpio --create --format='newc' > ../bootvol.img


Running
=======

Assuming you have a Xoom with the serial port through the headphone h^Hjack.

$ sudo fastboot boot  /home/andreiw/src/xen3-arm-tegra/dist/install/boot/xen-bin-3.0.2-2 bootvol.img

ATAG    (P): 0x00000100
Linked  (V): 0xff008000
Actual  (P): 0x00a00800
Desired (P): 0x00108000

Handing off to C...
[XEN]  __  __            _____  ___   ____    ____  
[XEN]  \ \/ /___ _ __   |___ / / _ \ |___ \  |___ \ 
[XEN]   \  // _ \ '_ \    |_ \| | | |  __) |__ __) |
[XEN]   /  \  __/ | | |  ___) | |_| | / __/|__/ __/ 
[XEN]  /_/\_\___|_| |_| |____(_)___(_)_____| |_____|
[XEN]                                               
[XEN] Xen/ARMv7 virtual machine monitor for ARM architecture
[XEN] Copyright (C) 2012 Andrei Warkentin <andreiw@msalumni.com>
[XEN] Copyright (C) 2007 Samsung Electronics Co, Ltd. All Rights Reserved.
[XEN]  http://www.cl.cam.ac.uk/netos/xen
[XEN]  University of Cambridge Computer Laboratory
[XEN] 
[XEN]  Xen version 3.0.2-2 (andreiw@localdomain) (gcc version 4.4.3 (GCC) ) Thu Sep 13 22:25:27 EDT 2012
[XEN]  Platform: arm-tegra
[XEN]  GIT SHA: eec91183a11fd05089b63eb8cc8a632580bdb23b
[XEN]  Kernel command line: <NULL>
[XEN]  Boot volume: 0x5000000-0x5022400
[XEN] TTB PA 0x104000
[XEN] idle_pgd VA 0xff004000
[XEN] xen_pstart 0x0
[XEN] xen_pend 0x40000000
[XEN] _end 0xff04606c
[XEN] _end VA 0x14606C
[XEN] nr_pages needed for all page_infos = 0x500
[XEN] frame table is at 0xff047000-0xff547000
[XEN] xenheap_phys_start = 0x650000 (VA 0xff550000)
[XEN] xenheap_phys_end = 0x850000 (VA 0xff750000)
[XEN] looking at bank 0
[XEN]         base - 0x0
[XEN]         end  - 0x40000000
[XEN] calling init_boot_pages on 0x650000-0x40000000
[XEN] calling init_xenheap_pages on 0x650000-0x850000
[XEN] FIQ debugger enabled
[XEN] Using scheduler: Simple EDF Scheduler (sedf)
[XEN] Hello from a Xen domain 1!
[XEN] Hello from a Xen domain 2!
[XEN] Hello from a Xen domain 1!

fiqdb> bt[XEN] Hello from a Xen domain 1!

sp ff746fd8 fp ff746ffc pc ff026d00 (get_current+0x0/0x20)
sp ff747000 fp 00000000 pc ff02774c (xd_test+0x0/0xdc)
fiqdb> [XEN] Hello from a Xen domain 2!
[XEN] Hello from a Xen domain 1!

fiqdb> bt
sp ff746f08 fp ff746f74 pc ff01b980 (get_current+0x0/0x20)
sp ff746f78 fp ff746fc4 pc ff021c18 (__enter_scheduler+0xe4/0x3ec)
sp ff746fc8 fp ff746fd4 pc ff021604 (sched_yield+0x28/0x34)
sp ff746fd8 fp ff746ffc pc ff027824 (xd_test+0xd8/0xdc)
sp ff747000 fp 00000000 pc ff02774c (xd_test+0x0/0xdc)
fiqdb> [XEN] Hello from a Xen domain 1!


TODO
====

Here goes various stuff that consitutes braindead design
that came from Samsung's EmbeddedXen, and various odds and
ends and which need some lovin', but not immediately.
1) Instead of placing pgd 16K below load address, put it
   after the loaded image.
2) EmbeddedXen put the IVT at PHYS_OFFSET (another 16k
   below pgd, really). I fixed that nonsense by using
   a heap page, but that seems wasteful - just use
   an existing kernel page and map it again.
3) Think about frame table location. Currently after
   kernel image.
4) Fix the link address being 0x8000 - with pgd moved
   should have no reason for this nonsense.
5) Fix percpu to support SMP.

Nice to have:
1) tegrafb for debugging
2) GDB xen domain to facilitate debugging
3) Control of GPIOs to reset, blink leds, etc. More
   for debugging, although by the time I get to a PV
   kernel, a sanitized view on GPIOs will need to be
   exposed via a hypercall.

Hacking away
============

You're welcome! I'd love to hear about and see your changes.

I use emacs, and have a special editing mode that I tend to like.

    (defun xen-c-mode ()
      "C mode with adjusted defaults for use with my Xen source."
      (interactive)
      (c-mode)
      (c-set-style "K&R")
      (setq tab-width 3)
      (setq indent-tabs-mode nil)
      (setq c-basic-offset 3)
      (setq show-trailing-whitespace t))

      ;; Draw tabs with the same color as trailing whitespace  

      (add-hook 'font-lock-mode-hook  
                (lambda ()  
                  (font-lock-add-keywords  
                   nil  
                   '(("\t" 0 'trailing-whitespace prepend)))))


Contact Info
============

Andrei Warkentin <andreiw@vmware.com>
Andrei Warkentin <andreiw@msalumni.com>
Andrei Warkentin <andrey.warkentin@gmail.com> 