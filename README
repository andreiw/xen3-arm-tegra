Xen3 ARMv7/Tegra2 work
======================

This is a an effort to bring up Samsung's Xen3 tree on
Tegra2. It's meant as a stepping stone to the Xen4 port.
Or maybe not. We'll see.

"Bring up" is a very relative word... most of the code
I end up having to (re)write isn't platform specific.
On the other hand, writing an OS is much more exciting
than making an existing one work on $FOO chip, so
I can't complain ;-).

Once the "basics" are in, the more interesting work
of figuring out the correct subset of hypercalls
and porting the Tegra2 Linux kernel to be PV can begin.
I am also musing adding self-hosting as a target - 
certainly it would be a boon for debugging and help
with SMP bring-up.


Differences
===========

Compatibility with Samsung's tree (or other Xen ARM efforts) is
not a goal. Compatibility at hypercall interface is a non-goal
as well. Perhaps I should rename my effort to "Nex" ;-).

Current differences from Samsung's tree:
1) ARMv7-only support.
2) Dom0/U configuration is not hardcoded.
3) Boot through ATAG-compatible bootloader, with all images passed
   through a "boot volume".
4) Kernel threads ("xen domains").
5) No ACM, given likely hypercall changes.
6) A FIQ-based extensible serial kernel debugger.

Full kernel preemption is a design goal. Kernel threads are cooperative at the moment.

Building
========

$ make menuconfig
$ make


Boot volume
===========

To get anywhere, you need to create a boot volume. This is a CPIO archive that at least
should contain a 'dom0' and 'initrd0' files.

Assuming the current directory contains the boot volume contents, the following
command will create a valid Xen boot volume.

$ find . | cpio --create --format='newc' > ../bootvol.img


Running
=======

Assuming you have a Xoom with the serial port through the headphone h^Hjack.

$ sudo fastboot boot  /home/andreiw/src/xen3-arm-tegra/dist/install/boot/xen-bin-3.0.2-2 bootvol.img

Linked  (V): 0xff004000
Actual  (P): 0x00a00800
Desired (P): 0x00104000

Handing off to C...
[XEN]  __  __            _____  ___   ____    ____  
[XEN]  \ \/ /___ _ __   |___ / / _ \ |___ \  |___ \ 
[XEN]   \  // _ \ '_ \    |_ \| | | |  __) |__ __) |
[XEN]   /  \  __/ | | |  ___) | |_| | / __/|__/ __/ 
[XEN]  /_/\_\___|_| |_| |____(_)___(_)_____| |_____|
[XEN]                                               
[XEN] Xen/ARMv7 virtual machine monitor for ARM architecture
[XEN] Copyright (C) 2012 Andrei Warkentin <andreiw@msalumni.com>
[XEN] Copyright (C) 2007 Samsung Electronics Co, Ltd. All Rights Reserved.
[XEN]  http://www.cl.cam.ac.uk/netos/xen
[XEN]  University of Cambridge Computer Laboratory
[XEN] 
[XEN]  Xen version 3.0.2-2 (andreiw@localdomain) (gcc version 4.4.3 (GCC) ) Tue Sep 18 00:16:36 EDT 2012
[XEN]  Platform: arm-tegra
[XEN]  GIT SHA: cbfc78acef60c1ae070076e44f500b921dd2c4ff
[XEN]  Kernel command line: <NULL>
[XEN]  Boot volume: 0x5000000-0x5022400
[XEN] Virtual memory map:
[XEN] ===============================================
[XEN] VECTORS_BASE:          0xffff0000
[XEN] DIRECTMAP_VIRT_END:    0xfff00000 (PA 0x01000000)
[XEN] M pages end:           0xfff00000 (PA 0x01000000)
[XEN] M pages start:         0xff54d000 (PA 0x0064d000)
[XEN] Frame table end:       0xff044000 (PA 0x00144000)
[XEN] Frame table start:     0xff544000 (PA 0x00644000)
[XEN] Kernel ends at:        0xff043070 (PA 0x00143070)
[XEN] Kernel linked at:      0xff004000 (PA 0x00104000)
[XEN] Idle page tables:      0xff000000 (PA 0x00100000)
[XEN] DIRECTMAP_VIRT_START:  0xff000000
[XEN] MAPCACHE_VIRT_START:   0xfec00000
[XEN] SHARED_INFO_BASE:      0xfeb00000
[XEN] IOREMAP_VIRT_START:    0xfc000000
[XEN] HYPERVISOR_VIRT_START: 0xfc000000
[XEN] looking at bank 0
[XEN]         base - 0x0
[XEN]         end  - 0x40000000
[XEN] FIQ debugger enabled
[XEN] Using scheduler: Simple EDF Scheduler (sedf)
[XEN] fb: no framebuffer support

fiqdb> [XEN] Hello from a Xen domain 1!
[XEN] Hello from a Xen domain 2!
[XEN] Hello from a Xen domain 1!
bt
sp ffefbda8 fp ffefbe6c pc ff00f9d8 (__qdivrem+0x380/0x8c8)
sp ffefbe70 fp ffefbeb4 pc ff00ffe8 (__divdi3+0xc8/0x104)
sp ffefbeb8 fp ffefbf04 pc ff019af4 (desched_extra_dom+0x258/0x47c)
sp ffefbf08 fp ffefbf74 pc ff01a248 (sedf_do_schedule+0x160/0x520)
sp ffefbf78 fp ffefbfc4 pc ff01dc10 (__enter_scheduler+0xe4/0x3ec)
sp ffefbfc8 fp ffefbfd4 pc ff01d5fc (sched_yield+0x28/0x34)
sp ffefbfd8 fp ffefbffc pc ff02381c (xd_test+0xd8/0xdc)
sp ffefc000 fp 00000000 pc ff023744 (xd_test+0x0/0xdc)
fiqdb> [XEN] Hello from a Xen domain 1!
[XEN] Hello from a Xen domain 2!
[XEN] Hello from a Xen domain 1!
[XEN] Hello from a Xen domain 1!


TODO
====

Here goes various stuff that consitutes braindead design
that came from Samsung's EmbeddedXen, and various odds and
ends and which need some lovin', but not immediately.
1) Initialize mapcache before traps to avoid using
   a heap page for pte table.
2) Fix percpu to support SMP.

Nice to have:
1) tegrafb for debugging
2) GDB xen domain to facilitate debugging
3) Control of GPIOs to reset, blink leds, etc. More
   for debugging, although by the time I get to a PV
   kernel, a sanitized view on GPIOs will need to be
   exposed via a hypercall.

Hacking away
============

You're welcome! I'd love to hear about and see your changes.

I use emacs, and have a special editing mode that I tend to like.

    (defun xen-c-mode ()
      "C mode with adjusted defaults for use with my Xen source."
      (interactive)
      (c-mode)
      (c-set-style "K&R")
      (setq tab-width 3)
      (setq indent-tabs-mode nil)
      (setq c-basic-offset 3)
      (setq show-trailing-whitespace t))

      ;; Draw tabs with the same color as trailing whitespace  

      (add-hook 'font-lock-mode-hook  
                (lambda ()  
                  (font-lock-add-keywords  
                   nil  
                   '(("\t" 0 'trailing-whitespace prepend)))))


Contact Info
============

Andrei Warkentin <andreiw@vmware.com>
Andrei Warkentin <andreiw@msalumni.com>
Andrei Warkentin <andrey.warkentin@gmail.com> 